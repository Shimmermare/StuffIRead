name: Publish Release
on:
  workflow_dispatch:
  push:

jobs:
  # Use cached build output for same commit hash
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - id: cache-restore
        name: Try get binaries from cache
        uses: actions/cache/restore@v3
        with:
          key: ${{ github.sha }}-${{ matrix.os }}-binaries
          path: binaries

      - uses: actions/checkout@v3
        if: steps.cache-restore.outputs.cache-hit != 'true'

      - uses: actions/setup-java@v3
        if: steps.cache-restore.outputs.cache-hit != 'true'
        with:
          distribution: temurin
          java-version: 18

      - name: Setup Gradle
        if: steps.cache-restore.outputs.cache-hit != 'true'
        uses: gradle/gradle-build-action@v2

      - name: Build Packages
        if: steps.cache-restore.outputs.cache-hit != 'true'
        run: ./gradlew preparePackagedReleaseDistributionForCurrentOS

      - name: Build Portable (Windows)
        if: matrix-os == 'windows-latest'
        run: ./gradlew preparePortableReleaseDistributionForWindows

      - id: cache-save
        name: Cache binaries
        if: steps.cache-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          key: ${{ steps.cache-restore.outputs.cache-primary-key }}
          path: binaries

      - name: Save Artifacts
        uses: actions/upload-artifact@v3
        with:
          retention-days: 1
          name: binaries
          if-no-files-found: error
          path: binaries

  release:
    # Run only when job started from tag
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get binaries
        uses: actions/download-artifact@v3
        with:
          name: binaries

      - name: List binaries in release
        run: ls -R binaries/ || true

      - name: Checkout license file
        uses: Bhacaz/checkout-files@v2
        with:
          files: LICENSE.txt

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: endsWith(github.ref_name, 'DRAFT')
          prerelease: endsWith(github.ref_name, 'PRERELEASE')
          fail_on_unmatched_files: true
          generate_release_notes: true
          files: |
            binaries/**
            LICENSE.txt